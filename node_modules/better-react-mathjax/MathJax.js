"use strict";var __assign=this&&this.__assign||function(){return(__assign=Object.assign||function(e){for(var t,r=1,n=arguments.length;r<n;r++)for(var i in t=arguments[r])Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i]);return e}).apply(this,arguments)},__createBinding=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,n){e[n=void 0===n?r:n]=t[r]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),__importStar=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.prototype.hasOwnProperty.call(e,r)&&__createBinding(t,e,r);return __setModuleDefault(t,e),t},__rest=this&&this.__rest||function(e,t){var r={};for(i in e)Object.prototype.hasOwnProperty.call(e,i)&&t.indexOf(i)<0&&(r[i]=e[i]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols)for(var n=0,i=Object.getOwnPropertySymbols(e);n<i.length;n++)t.indexOf(i[n])<0&&Object.prototype.propertyIsEnumerable.call(e,i[n])&&(r[i[n]]=e[i[n]]);return r};Object.defineProperty(exports,"__esModule",{value:!0});var react_1=__importStar(require("react")),MathJaxContext_1=require("./MathJaxContext"),typesettingFailed=function(e){return"Typesetting failed: "+(void 0!==e.message?e.message:e.toString())},MathJax=function(e){function n(){"every"===h&&u&&"post"===y&&null!==d.current&&(d.current.style.visibility="visible"),v.current||("first"===h&&null!==d.current&&(d.current.style.visibility="visible"),o&&o(),v.current=!0),s&&s(),g.current=!1}var t=e.inline,i=void 0!==t&&t,r=e.hideUntilTypeset,o=e.onInitTypeset,s=e.onTypeset,a=e.text,u=e.dynamic,c=e.typesettingOptions,l=e.renderMode,t=e.children,e=__rest(e,["inline","hideUntilTypeset","onInitTypeset","onTypeset","text","dynamic","typesettingOptions","renderMode","children"]),p=react_1.useRef(""),d=react_1.useRef(null),f=react_1.useContext(MathJaxContext_1.MathJaxBaseContext),h=void 0===r?null==f?void 0:f.hideUntilTypeset:r,y=void 0===l?null==f?void 0:f.renderMode:l,_=void 0===c?null==f?void 0:f.typesettingOptions:c,v=react_1.useRef(!1),g=react_1.useRef(!1);return!g.current&&null!==d.current&&u&&"every"===h&&"post"===y&&(d.current.style.visibility="hidden"),("undefined"!=typeof window?react_1.useLayoutEffect:react_1.useEffect)(function(){if((u||!v.current)&&null!==d.current){if(!f)throw Error("MathJax was not loaded, did you use the MathJax component outside of a MathJaxContext?");if("pre"===y){if(!("string"==typeof(e=a)&&0<e.length))throw Error("Render mode 'pre' requires text prop to be set and non-empty, which was currently \""+a+'"');if(!c||!c.fn)throw Error("Render mode 'pre' requires 'typesettingOptions' prop with 'fn' property to be set on MathJax element or in the MathJaxContext");if(2===f.version)throw Error("Render mode 'pre' only available with MathJax 3, and version 2 is currently in use")}"post"!==y&&a===p.current||g.current||(g.current=!0,3===f.version?f.promise.then(function(t){var r;"pre"===y?(r=function(e){p.current=a,t.startup.document.clear(),t.startup.document.updateDocument(),null!==d.current&&(d.current.innerHTML=e.outerHTML),n()},c.fn.endsWith("Promise")?t.startup.promise.then(function(){return t[_.fn](a,__assign(__assign({},(null==_?void 0:_.options)||{}),{display:!i}))}).then(r).catch(function(e){throw n(),Error(typesettingFailed(e))}):t.startup.promise.then(function(){var e=t[_.fn](a,__assign(__assign({},(null==_?void 0:_.options)||{}),{display:!i}));r(e)}).catch(function(e){throw n(),Error(typesettingFailed(e))})):t.startup.promise.then(function(){return t.typesetClear([d.current]),t.typesetPromise([d.current])}).then(n).catch(function(e){throw n(),Error(typesettingFailed(e))})}).catch(function(e){throw n(),Error(typesettingFailed(e))}):f.promise.then(function(e){e.Hub.Queue(["Typeset",e.Hub,d.current]),e.Hub.Queue(n)}).catch(function(e){throw n(),Error(typesettingFailed(e))}))}var e}),react_1.default.createElement("span",__assign({},e,{style:__assign(__assign({display:i?"inline":"block"},e.style),{visibility:h?"hidden":void 0}),ref:d}),t)};exports.default=MathJax;